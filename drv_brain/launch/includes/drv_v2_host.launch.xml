<?xml version="1.0"?>
<launch>
  <arg name="vision_namespace" default="vision"/>

  <!-- Vision system reference frame on the robot -->
  <arg name="base_link_frame" default="base_link"/>

  <arg name="recog_method" default="1"/>

  <!-- Initialize NVG 2.0 (Astra S camera and Arduino Mega 2560) -->
  <node ns="$(arg vision_namespace)" pkg="rosserial_python" type="serial_node.py" name="serial_node" output="screen">
    <param name="port" value="/dev/Arduino_vision"/>
    <param name="baud" value="57600"/>
  </node>

  <!-- No need to give namespace here, cause arg 'camera' act as namespace -->
  <include file="$(find astra_launch)/launch/astra.launch">
    <arg name="camera" value="$(arg vision_namespace)" />
    <!-- Hardware depth registration -->
    <arg name="depth_registration" value="true" />
    <!-- Driver parameters -->
    <arg name="color_depth_synchronization" value="true" />
  </include>

  <!-- Limit the image quality to speed up -->
  <node pkg="dynamic_reconfigure" type="dynparam" name="resetter" 
        args="set /$(arg vision_namespace)/rgb/image_rect_color/compressed jpeg_quality 40" />

  <node pkg="dynamic_reconfigure" type="dynparam" name="dynparam" 
        args="set_from_parameters /$(arg vision_namespace)/driver">
    <!-- Skip 1 msg so let the image be published in 15 Hz to speed up -->
    <param name="data_skip" value="1" />
  </node>

  <!-- Initialize motor message publisher -->
  <node ns="$(arg vision_namespace)" name="drv_motor" pkg="drv_motor" type="drv_motor" output="screen">
  </node>

  <!-- Initialize central control -->
  <node ns="$(arg vision_namespace)" name="drv_brain" pkg="drv_brain" type="drv_brain" output="screen">
    <!-- The range of pitch and yaw servos of NVG 2.0, in degree -->
    <param name="pitch_min" value="60" />
    <param name="pitch_max" value="140" />
    <param name="yaw_min" value="0" />
    <param name="yaw_max" value="180" />
  </node>

  <!-- Initialize action service -->
  <node ns="$(arg vision_namespace)" name="drv_action" pkg="drv_action" type="drv_action" output="screen">
  </node>

  <!-- Broadcast transform among frames -->
  <node ns="$(arg vision_namespace)" name="drv_tf" pkg="drv_tf" type="drv_tf" output="screen">
    <param name="camera_frame_id" value="$(arg vision_namespace)_link" />
    <param name="root_frame_id" value="$(arg base_link_frame)" />

    <!-- structure parameters of NVG 2.0 -->
    <param name="pitch_offset_value" value="90.0" />

    <param name="dx_camera_to_pitch_value" value="0.0" />
    <param name="dy_camera_to_pitch_value" value="0.06" />
    <param name="dz_camera_to_pitch_value" value="0.0" />
    <param name="dx_pitch_to_yaw_value" value="0.12" />
    <param name="dy_pitch_to_yaw_value" value="0.0" />
    <param name="dz_pitch_to_yaw_value" value="0.159" />
  </node>

  <!-- Initialize user selection service -->
  <node ns="$(arg vision_namespace)" name="drv_user" pkg="drv_user" type="drv_user.py" output="screen">
    <!-- If true, will select the target if only 1 candidate present -->
    <param name="fast_select" value="true" />
  </node>

  <!-- Initialize color recognize service, this is used as a simplified object recognizer -->
  <node ns="$(arg vision_namespace)" name="drv_recognize_color" pkg="drv_recognize" type="drv_recognize_color" output="screen">
    <!-- Suit for detecting green tee bottle -->
    <param name="hue_low" value="26" />
    <param name="sat_low" value="34" />
    <param name="val_low" value="46" />
    <param name="hue_high" value="77" />
    <param name="sat_high" value="255" />
    <param name="val_high" value="255" />
  </node>

  <group if="$(arg recog_method)">
    <!-- Initialize the search client -->
    <node ns="$(arg vision_namespace)" name="drv_search" pkg="drv_search" type="drv_search" output="screen">
      <!-- Use color method -->
      <param name="recognize_method" value="$(arg recog_method)" />
    </node>
  </group>

  <!-- Initialize tracking function -->
  <node ns="$(arg vision_namespace)" name="drv_track_kcf" pkg="drv_track_kcf" type="drv_track_kcf" output="screen">
  </node>

  <!-- Initialize grasp planning function -->
  <node ns="$(arg vision_namespace)" name="drv_grasp" pkg="drv_grasp" type="drv_grasp" respawn="false">
    <!-- No slash on the front -->
    <param name="base_frame_id" value="$(arg base_link_frame)" />
    <param name="camera_optical_frame_id" value="$(arg vision_namespace)_depth_optical_frame" />
    <!-- If true, object pose only publish once for one detection -->
    <param name="pub_pose_once_id" value="false" />
    <!-- Left arm graspable area params -->
    <param name="left_arm_x_min" value="0.48" />
    <param name="left_arm_x_max" value="0.52" />
    <param name="left_arm_y_min" value="0.23" />
    <param name="left_arm_y_max" value="0.3" />
  </node>
</launch>